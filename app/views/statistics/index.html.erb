<ul class='nav nav-tabs'>
  <li class='active'><a href='#period' data-toggle='tab'>期間別</a></li>
  <li><a href='#category' data-toggle='tab'>カテゴリ別</a></li>
</ul>

<div class='tab-content'>
  <div id='period' class='tab-pane active'>
    <span class='graph'>
      <svg id='monthly'></svg>
    </span>
    <span class='graph'>
      <svg id='daily'></svg>
    </span>
  </div>
  <div id='category' class='tab-pane'>
    <div class="rows">
      <div class="col-lg-6">
        <h4 class="title-stat-category">収入</h4>
        <span class='graph'>
          <svg id='income'></svg>
        </span>
      </div>

      <div class="col-lg-6">
        <h4 class="title-stat-category">支出</h4>
        <span class='graph'>
          <svg id='expense'></svg>
        </span>
      </div>
    </div>
  </div>
</div>

<script>
  $(document).ready(function() {
    settlement = new Settlement();
    settlement.drawMonthly();

  // 1. データの準備
  var dataset = [
    { "name": "食費", "value": 20 },
    { "name": "娯楽費", "value": 17 },
    { "name": "交通費", "value": 15 },
    { "name": "水道光熱費", "value": 7 },
    { "name": "教養費", "value": 4 },
    { "name": "その他", "value": 1 },
    { "name": "美容費", "value": 3 },
    { "name": "理容衛生費", "value": 5 },
    { "name": "通信費", "value": 4 },
    { "name": "住居費", "value": 9 }
  ]

  var width = 500; // グラフの幅
  var height = 500; // グラフの高さ
  var radius = Math.min(width, height) / 2 - 10;

  // 2. SVG領域の設定
  var svg = d3.select("#expense").attr("width", width).attr("height", height);

  g = svg.append("g").attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

  // 3. カラーの設定
  var color = d3.scaleOrdinal()
    .range(["#DC3912", "#3366CC", "#109618", "#FF9900", "#990099"]);

  // 4. pieチャートデータセット用関数の設定
  var pie = d3.pie()
    .value(function(d) { return d.value; });

  // 5. pieチャートSVG要素の設定
  var pieGroup = g.selectAll(".pie")
    .data(pie(dataset))
    .enter()
    .append("g")
    .attr("class", "pie");

  arc = d3.arc()
    .outerRadius(radius)
    .innerRadius(0);

  pieGroup.append("path")
    .attr("d", arc)
    .attr("fill", function(d) { return color(d.index) })
    .attr("opacity", 0.5);
//    .attr("stroke", "white");

  // 6. pieチャートテキストSVG要素の設定
  var text = d3.arc()
    .outerRadius(radius - 30)
    .innerRadius(radius - 30);

  pieGroup.append("text")
    .attr("fill", "black")
    .attr("transform", function(d) { return "translate(" + text.centroid(d) + ")"; })
    .attr("dy", "5px")
    .attr("font", "10px")
    .attr("text-anchor", "middle")
    .text(function(d) { return d.data.name; });

  // 1. データの準備
  var dataset = [
    { "name": "娯楽費", "value": 2 },
    { "name": "交際費", "value": 10 },
    { "name": "給料", "value": 30 },
  ]

  // 2. SVG領域の設定
  var svg = d3.select("#income").attr("width", width).attr("height", height);

  g = svg.append("g").attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

  // 3. カラーの設定
  var color = d3.scaleOrdinal()
    .range(["#DC3912", "#3366CC", "#109618", "#FF9900", "#990099"]);

  // 4. pieチャートデータセット用関数の設定
  var pie = d3.pie()
    .value(function(d) { return d.value; });

  // 5. pieチャートSVG要素の設定
  var pieGroup = g.selectAll(".pie")
    .data(pie(dataset))
    .enter()
    .append("g")
    .attr("class", "pie");

  arc = d3.arc()
    .outerRadius(radius)
    .innerRadius(0);

  pieGroup.append("path")
    .attr("d", arc)
    .attr("fill", function(d) { return color(d.index) })
    .attr("opacity", 0.5);
//    .attr("stroke", "white");

  // 6. pieチャートテキストSVG要素の設定
  var text = d3.arc()
    .outerRadius(radius - 30)
    .innerRadius(radius - 30);

  pieGroup.append("text")
    .attr("fill", "black")
    .attr("transform", function(d) { return "translate(" + text.centroid(d) + ")"; })
    .attr("dy", "5px")
    .attr("font", "10px")
    .attr("text-anchor", "middle")
    .text(function(d) { return d.data.name; });
  });
</script>
